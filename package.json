{
  "name": "vscode-php-codesniffer",
  "displayName": "PHP_CodeSniffer",
  "description": "Brings PHPCS support to VS Code.",
  "version": "1.6.0",
  "license": "GPL-2.0-or-later",
  "author": "Christopher Allford",
  "repository": {
    "type": "git",
    "url": "https://github.com/ObliviousHarmony/vscode-php-codesniffer.git"
  },
  "publisher": "obliviousharmony",
  "icon": "assets/icon.png",
  "galleryBanner": {
    "color": "#B0B3D6",
    "theme": "dark"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "engines": {
    "vscode": "^1.53.0"
  },
  "main": "extension.js",
  "extensionKind": [
    "workspace"
  ],
  "activationEvents": [
    "onLanguage:php"
  ],
  "contributes": {
    "configuration": {
      "title": "PHP_CodeSniffer",
      "properties": {
        "phpCodeSniffer.autoExecutable": {
          "type": "boolean",
          "markdownDescription": "Attempts to find `bin/phpcs` in the file directory and parent directories' vendor directory before falling back to `#phpCodeSniffer.executable#`.",
          "default": false,
          "scope": "resource"
        },
        "phpCodeSniffer.executable": {
          "type": "string",
          "markdownDescription": "The path to the PHPCS executable we want to use when `#phpCodeSniffer.autoExecutable#` is disabled or unable to find one.",
          "default": "phpcs",
          "scope": "machine-overridable"
        },
        "phpCodeSniffer.ignorePatterns": {
          "type": "array",
          "description": "An array of regular expressions for paths that should be ignored by the extension.",
          "markdownDeprecationMessage": "File and folder exclusions should use glob patterns in `#phpCodeSniffer.exclude#` instead.",
          "default": [
            ".*/vendor/.*"
          ],
          "items": {
            "type": "string"
          },
          "scope": "window"
        },
        "phpCodeSniffer.exclude": {
          "type": "array",
          "description": "Glob patterns for files and folders that should be ignored by the extension.",
          "default": [
            "**/vendor/**"
          ],
          "items": {
            "type": "string"
          },
          "scope": "window"
        },
        "phpCodeSniffer.lintAction": {
          "type": "string",
          "description": "The editor action that will cause the linter to run.",
          "default": "Change",
          "enum": [
            "Change",
            "Save"
          ],
          "enumDescriptions": [
            "Lints whenever a document is changed.",
            "Lints when a document is saved."
          ],
          "scope": "resource"
        },
        "phpCodeSniffer.standard": {
          "type": "string",
          "description": "The coding standard that should be used by PHPCS.",
          "default": "Disabled",
          "enum": [
            "Disabled",
            "Default",
            "PEAR",
            "MySource",
            "Squiz",
            "PSR1",
            "PSR12",
            "Custom"
          ],
          "enumDescriptions": [
            "Disables the PHP_CodeSniffer extension's linting.",
            "Allows PHPCS to decide the coding standard.",
            "Uses the PEAR coding standard.",
            "Uses the MySource coding standard.",
            "Uses the Squiz coding standard.",
            "Uses the PSR-1 coding standard.",
            "Uses the PSR-12 coding standard,",
            "Uses the custom standard referenced in the custom ruleset option."
          ],
          "scope": "window"
        },
        "phpCodeSniffer.standardCustom": {
          "type": "string",
          "markdownDescription": "The custom coding standard to use if `#phpCodeSniffer.standard#` is set to 'Custom'.",
          "default": "",
          "scope": "window"
        }
      }
    },
    "commands": [
      {
        "command": "phpCodeSniffer.cancelProcessing",
        "title": "PHP_CodeSniffer: Cancel Processing"
      }
    ]
  },
  "dependencies": {
    "minimatch": "^3.0.4"
  },
  "devDependencies": {
    "@types/jest": "^26.0.23",
    "@types/node": "^12.20.37",
    "@types/vscode": "~1.53.0",
    "@types/minimatch": "^3.0.4",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "eslint": "^7.27.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^3.4.1",
    "file-loader": "^6.2.0",
    "jest": "^26.6.3",
    "prettier": "2.3.0",
    "ts-jest": "^26.5.6",
    "ts-loader": "^8.3.0",
    "typescript": "^4.5.3",
    "vsce": "^2.5.1",
    "webpack": "^5.65.0",
    "webpack-cli": "^4.9.1"
  },
  "scripts": {
    "vscode:prepublish": "npm run clean && webpack --mode production",
    "clean": "rimraf extension.js extension.js.map",
    "build": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "lint": "eslint ./src --fix",
    "test": "jest"
  }
}
